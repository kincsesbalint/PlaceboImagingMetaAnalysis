male        <- factor(male, levels = 0:1, labels = c("female", "male"))
healthy     <- factor(healthy, levels = 0:1, labels = c("patient","healthy"))
pla         <- factor(pla, levels = 0:2, labels = c("control", "placebo","other"))
pain        <- factor(pain, levels = 0:3, labels = c("noPain", "Pain","earlyPain","latePain"))  # Cave: for the wager princeton-data watch the cond labels: there was intense-mild and intense-baseline!!!
predictable <- factor(predictable, levels = 0:1, labels = c("unpredictable", "predictable"))  # Cave: currently not useful, because almost all studies included a cue and jittered anticipation phases. It's difficult do decide at what cutoff a stimulus was predictable or not. Maybe better to use anticipation duration or some scalar measure of uncertainty.
realTreat   <- factor(realTreat, levels = 0:1, labels = c("without Verum", "with Verum"))
plaFirst    <- factor(plaFirst, levels = 0:1, labels = c("plaSecond", "plaFirst"))
})
# Consider for Princeton Shock data: If betas remain unavailable: Add con_0002 ""intense-none"" and con_0003 ""(intense-none) control-placebo"" to yield the control condition
# z-Transform continuous data by-study
df$zrating =unlist(tapply(df$rating,df$studyID, function(x) scale(x, center = TRUE, scale = TRUE)))
df$zstimInt=unlist(tapply(df$stimInt,df$studyID, function(x) scale(x, center = TRUE, scale = TRUE)))
df$zNPSraw =unlist(tapply(df$NPSraw,df$studyID, function(x) scale(x, center = TRUE, scale = TRUE)))
df$zNPScorrected=unlist(tapply(df$NPScorrected,df$studyID, function(x) scale(x, center = TRUE, scale = TRUE)))
#######  EXCLUDE OUTLIERS ######
df=df[!(df$subID=="bingel_14"&df$pla=="control"),] #Excluded: Onset mistakenly entered twice at baseline
#Excluded for excessive deviation (>30 points)
#ex=abs(df$dev_from_target_rating)>=30
#df$expect[ex]=NA
#df$rating[ex]=NA
#### Plot NPScorr vs Covariates ####
# Define the plot appearance for a particular type of plot
plotAll <- function(df,plX) {
dodge <- position_dodge(width=0.5)
jdodge <-position_jitterdodge(jitter.width=0.5,dodge.width=0.5)
pl<- ggplot(df, aes(x=eval(parse(text=plX),df),y=zNPScorrected,color=studyID))+
geom_point(position=jdodge)+
geom_smooth(method='lm',formula=y~x)+
geom_smooth(aes(x=eval(parse(text=plX),df),y=zNPScorrected,color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
labs(x = plX)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
pl
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
list(pl)
}
#### Plot  ####
plX=cbind("zrating","zstimInt","male","age","pla","pain","plaFirst","condSeq","fieldStrength","tr","te","voxelVolume","meanBlockDur","xSpan")
for(i in 1:length(plX)){
print(plotAll(df[df$pain!="noPain",],plX[i]))
}
pl<- ggplot(df, aes(x=pain,y=zNPScorrected,color=subID))+
geom_line()+
geom_smooth(aes(x=eval(parse(text=plX),df),y=zNPScorrected,color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
labs(x = plX)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
pl
SpaghettiplotAll <- function(df,plX) {
dodge <- position_dodge(width=0.5)
jdodge <-position_jitterdodge(jitter.width=0.5,dodge.width=0.5)
pl<- ggplot(df, aes(x=pain,y=zNPScorrected,color=subID))+
geom_line()+
geom_smooth(aes(x=eval(parse(text=plX),df),y=zNPScorrected,color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
guides(colour=FALSE)+
labs(x = plX)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
pl
SpaghettiplotAll <- function(df,plX) {
dodge <- position_dodge(width=0.5)
jdodge <-position_jitterdodge(jitter.width=0.5,dodge.width=0.5)
pl<- ggplot(df, aes(x=pain,y=zNPScorrected,color=subID))+
geom_line()+
geom_smooth(aes(x=eval(parse(text=plX),df),y=zNPScorrected,color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
guides(colour=FALSE)+
labs(x = plX)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
pl
pl<- ggplot(df, aes(x=pain,y=zNPScorrected,color=subID))+
geom_line()+
geom_smooth(aes(x=eval(parse(text=plX),df),y=zNPScorrected,color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
guides(colour=FALSE)+
labs(x = plX)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
pl
pl<- ggplot(df, aes(x=pain,y=zNPScorrected,color=subID))+
geom_line()+
geom_smooth(aes(x=eval(parse(text=plX),df),y=zNPScorrected,color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
guides(colour=FALSE)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
pl
pl<- ggplot(df, aes(x=pain,y=zNPScorrected,color=subID))+
geom_line()+
geom_smooth(aes(x=pain,y=zNPScorrected,color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
guides(colour=FALSE)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
pl
pl<- ggplot(df, aes(x=pain,y=zNPScorrected,group=subID,color=subID))+
geom_line()+
geom_smooth(aes(x=pain,y=zNPScorrected,color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
guides(colour=FALSE)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
pl
pl<- ggplot(df, aes(x=pain,y=zNPScorrected,group=subID,color=subID))+
geom_line()+
geom_smooth(aes(x=pain,y=zNPScorrected,group="OVERALL",color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
guides(colour=FALSE)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
pl
pl<- ggplot(df, aes(x=pain,y=zNPScorrected,group=subID,color=subID))+
geom_line()+
#geom_smooth(aes(x=pain,y=zNPScorrected,group="OVERALL",color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
guides(colour=FALSE)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
pl
by(df,studyID,SpaghettiplotAll)
SpaghettiplotAll <- function(df,plX) {
dodge <- position_dodge(width=0.5)
jdodge <-position_jitterdodge(jitter.width=0.5,dodge.width=0.5)
pl<- ggplot(df, aes(x=pain,y=zNPScorrected,group=subID,color=subID))+
geom_line()+
#geom_smooth(aes(x=pain,y=zNPScorrected,group="OVERALL",color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
guides(colour=FALSE)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
pl
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
list(pl)
}
#### Plot  ####
by(df,studyID,SpaghettiplotAll)
SpaghettiplotAll <- function(df,plX) {
dodge <- position_dodge(width=0.5)
jdodge <-position_jitterdodge(jitter.width=0.5,dodge.width=0.5)
pl<- ggplot(df, aes(x=pain,y=zNPScorrected,group=subID,color=subID))+
geom_line()+
#geom_smooth(aes(x=pain,y=zNPScorrected,group="OVERALL",color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
guides(colour=FALSE)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
pl
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
list(pl)
}
#### Plot  ####
by(df,df$studyID,SpaghettiplotAll)
df
SpaghettiplotAll <- function(df,plX) {
dodge <- position_dodge(width=0.5)
jdodge <-position_jitterdodge(jitter.width=0.5,dodge.width=0.5)
pl<- ggplot(df, aes(x=pain,y=zNPScorrected,group=subID,color=subID))+
geom_line()+
#geom_smooth(aes(x=pain,y=zNPScorrected,group="OVERALL",color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
guides(colour=FALSE)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())
ggtitle(as.character(df$tudyID[1])) # Add inital of studyIDs first name as graph title
pl
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
list(pl)
}
#### Plot  ####
by(df[df$pla="control"],df$studyID,SpaghettiplotAll)
SpaghettiplotAll <- function(df,plX) {
dodge <- position_dodge(width=0.5)
jdodge <-position_jitterdodge(jitter.width=0.5,dodge.width=0.5)
pl<- ggplot(df, aes(x=pain,y=zNPScorrected,group=subID,color=subID))+
geom_line()+
#geom_smooth(aes(x=pain,y=zNPScorrected,group="OVERALL",color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
guides(colour=FALSE)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())
ggtitle(as.character(df$tudyID[1])) # Add inital of studyIDs first name as graph title
pl
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
list(pl)
}
#### Plot  ####
by(df[df$pla=="control"],df$studyID,SpaghettiplotAll)
df$pla=="control"
df[df$pla=="control"]
by(df[df$pla=="control",],df$studyID,SpaghettiplotAll)
by(df[df$pla=="control",],df$studyID[df$pla=="control",],SpaghettiplotAll)
by(df[df$pla=="control",],df$studyID[df$pla=="control"],SpaghettiplotAll)
SpaghettiplotAll <- function(df,plX) {
dodge <- position_dodge(width=0.5)
jdodge <-position_jitterdodge(jitter.width=0.5,dodge.width=0.5)
pl<- ggplot(df, aes(x=pain,y=zNPScorrected,group=subID,color=subID))+
geom_line()+
#geom_smooth(aes(x=pain,y=zNPScorrected,group="OVERALL",color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
guides(colour=FALSE)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())+
ggtitle(as.character(df$tudyID[1])) # Add inital of studyIDs first name as graph title
pl
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
list(pl)
}
#### Plot  ####
by(df[df$pla=="control",],df$studyID[df$pla=="control"],SpaghettiplotAll)
SpaghettiplotAll <- function(df,plX) {
dodge <- position_dodge(width=0.5)
jdodge <-position_jitterdodge(jitter.width=0.5,dodge.width=0.5)
pl<- ggplot(df, aes(x=pain,y=zNPScorrected,group=subID,color=subID))+
geom_line()+
#geom_smooth(aes(x=pain,y=zNPScorrected,group="OVERALL",color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
guides(colour=FALSE)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())+
ggtitle(as.character(df$studyID[1])) # Add inital of studyIDs first name as graph title
pl
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
list(pl)
}
#### Plot  ####
by(df[df$pla=="control",],df$studyID[df$pla=="control"],SpaghettiplotAll)
SpaghettiplotAll <- function(df,plX) {
dodge <- position_dodge(width=0.5)
jdodge <-position_jitterdodge(jitter.width=0.5,dodge.width=0.5)
pl<- ggplot(df, aes(x=real_pain,y=zNPScorrected,group=subID,color=subID))+
geom_point()+
geom_line()+
#geom_smooth(aes(x=pain,y=zNPScorrected,group="OVERALL",color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
guides(colour=FALSE)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())+
ggtitle(as.character(df$studyID[1])) # Add inital of studyIDs first name as graph title
pl
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
list(pl)
}
#### Plot  ####
by(df[df$pla=="control",],df$studyID[df$pla=="control"],SpaghettiplotAll)
SpaghettiplotAll <- function(df,plX) {
dodge <- position_dodge(width=0.5)
jdodge <-position_jitterdodge(jitter.width=0.5,dodge.width=0.5)
pl<- ggplot(df, aes(x=pain,y=zNPScorrected,group=subID,color=subID))+
geom_point()+
geom_line()+
#geom_smooth(aes(x=pain,y=zNPScorrected,group="OVERALL",color="OVERALL"),method='lm',formula=y~x)+
#geom_line(aes(group=positive:tbl),stat='summary', fun.y=bmean,position=dodge)+
#scale_colour_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#scale_fill_manual("Group:",values = c(rgb(.35,.70,.90), rgb(.0,.45,.70), rgb(.80,.40,.70), rgb(.45,.15,.50)))+
#ylim(-30, 100)+
guides(colour=FALSE)+
labs(y = "NPS (within-study z-Score, painful condition)")+
theme(aspect.ratio = 1/sqrt(2))+ #fix plot size
theme(axis.text=element_text(size=12), #fix axis font size
axis.title=element_text(size=14,face="bold"))+ #fix axis title font size
theme(strip.text.x = element_text(size = 12,face="bold"))+
theme(axis.line = element_line(colour = "black"),
panel.grid.major.y = element_line(colour = "#111111",size=0.2), #element_line(colour = "#555555"), #fix grid display
panel.grid.minor.y = element_blank(), #fix grid display
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = 'transparent'),
panel.background = element_blank())+
ggtitle(as.character(df$studyID[1])) # Add inital of studyIDs first name as graph title
pl
#ggtitle(as.character(dfwirk$combistudyIDs[1])) # Add inital of studyIDs first name as graph title
list(pl)
}
#### Plot  ####
by(df[df$pla=="control",],df$studyID[df$pla=="control"],SpaghettiplotAll)
