%% Meta-Analysis & Forest Plot
clear
% Add folder with Generic Inverse Variance Methods Functions first
addpath('../A_Analysis_GIV_Functions/')
datapath='../../Datasets';

load(fullfile(datapath,'AllData.mat'))

% !!!!! These must be in the same order as listed under "studies" !!!!
studies={  'atlas'
           'ellingsen_warm'
           %'ellingsen_brush'
           'freeman'
           'kessner'
           'kong06'
           'kong09'               % NO RATINGS FOR HI VS LOW AVAILABLE
           'ruetgen'
           'wager04a_princeton'}; % NO RATINGS FOR HI VS LOW AVAILABLE
% studyIDtexts={
%             'Atlas et al. 2012: High (VAS 100%, ?47.1?C) vs low (VAS 25%, 41.2?C) heat';...
%             'Ellingsen et al. 2013: Painful hot (VAS 50%, ?47.1?C) vs warm touch (VAS 0%, ~42.5?C)';...
%             'Ellingsen et al. 2013: Painful hot (VAS 50%, ?47.1?C) vs brushstroke (VAS 0%)';...
%             'Freeman et al. 2015: High (VAS 55%) vs low (???) heat (post placebo)';...
%             'Kong et al. 2006: High (VAS ???) vs low (???) heat (post placebo)';...
%             'Kong et al. 2009: High (VAS ???) vs low (???) heat (post placebo)';...
%             'Ruetgen et al. 2015: High (VAS 83%, 0.74mA) vs non-painful (VAS 0%, 0.16 mA), electrical shocks'
%             'Wager et al. 2004, Study 1: Stong (3.75 mA) vs mild (1.44 mA) electrical shock';...
%             };
studyIDtexts={
            'Atlas et al. 2012: High vs low noxious heat';...
            'Ellingsen et al. 2013: Noxious heat vs non-noxious warm touch';...
            %'Ellingsen et al. 2013: Noxious heat vs non-noxious brushstroke';...
            'Freeman et al. 2015: High vs low noxious heat';...
            'Kessner et al. 2013: High vs moderate noxious heat';...
            'Kong et al. 2006: High vs low noxious heat';...
            'Kong et al. 2009: High vs low noxious heat';... % NO RATINGS FOR HI VS LOW AVAILABLE
            'Ruetgen et al. 2015: High vs mild noxious electrical shocks'
            'Wager et al. 2004, Study 1: High vs mild noxious electrical shocks';... % NO RATINGS FOR HI VS LOW AVAILABLE
            };
% studyIDtexts={
%             'Atlas et al. 2012:';...
%             'Ellingsen et al. 2013: (warmth)';...
%             'Ellingsen et al. 2013: (brushstroke)';...
%             'Freeman et al. 2015:';...
%             'Kong et al. 2006:';...
%             'Kong et al. 2009:';...
%             'Ruetgen et al. 2015:'
%             'Wager et al. 2004, Study 1:';...
%             };
			
        % The asteriks "*" indicates that for these data-sets only rating
        % contrasts were available. Therefore standardized effect sizes (d
        % and hedges g) were imputed using the mean average within-subject
        % correlation for ratings in all other studies, which was: 0.5143
        % (obtained by running the code below with replacing all imputed r's with NaN for all withinMetastats functions, then nanmean([stats.r]))
%% Study-level data
varselect={'NPS','SIIPS','rating','stimInt'};
df_hilo.variables=varselect;
df_hilo.studies=studies;

iNPS=find(strcmp(df_hilo.variables,'NPS'));
iSIIPS=find(strcmp(df_hilo.variables,'SIIPS'));
iR=find(strcmp(df_hilo.variables,'rating'));
iS=find(strcmp(df_hilo.variables,'stimInt'));

%'Atlas'
i=find(strcmp(studies,'atlas'));
df_hilo.hi{i}=mean(...
        cat(3,...
        df{(strcmp(df.studyID,'atlas')&~cellfun(@isempty,regexp(df.cond,'StimHiPain_Open_Stimulation'))),varselect},...
        df{(strcmp(df.studyID,'atlas')&~cellfun(@isempty,regexp(df.cond,'StimHiPain_Hidden_Stimulation'))),varselect}),...
        3);
df_hilo.lo{i}=mean(...
        cat(3,...
        df{(strcmp(df.studyID,'atlas')&~cellfun(@isempty,regexp(df.cond,'StimLoPain_Open_Stimulation'))),varselect},...
        df{(strcmp(df.studyID,'atlas')&~cellfun(@isempty,regexp(df.cond,'StimLoPain_Hidden_Stimulation'))),varselect}),...
        3);

stats.NPS(i)=withinMetastats(df_hilo.hi{i}(:,iNPS),df_hilo.lo{i}(:,iNPS));
stats.SIIPS(i)=withinMetastats(df_hilo.hi{i}(:,iSIIPS),df_hilo.lo{i}(:,iSIIPS));
stats.rating(i)=withinMetastats(df_hilo.hi{i}(:,iR),df_hilo.lo{i}(:,iR));
stats.stimInt(i)=withinMetastats(df_hilo.hi{i}(:,iS),df_hilo.lo{i}(:,iS));

    
%'Ellingsen Heat vs Warm'
i=find(strcmp(studies,'ellingsen_warm'));
df_hilo.hi{i}=mean(...
        cat(3,...
        df{(strcmp(df.studyID,'ellingsen')&strcmp(df.cond,'Painful_touch_placebo')),varselect},...
         df{(strcmp(df.studyID,'ellingsen')&strcmp(df.cond,'Painful_touch_control')),varselect}),...
        3);
df_hilo.lo{i}=mean(...
        cat(3,...
        df{(strcmp(df.studyID,'ellingsen')&strcmp(df.cond,'Warm_touch_placebo')),varselect},...
         df{(strcmp(df.studyID,'ellingsen')&strcmp(df.cond,'Warm_touch_control')),varselect}),...
        3);
stats.NPS(i)=withinMetastats(df_hilo.hi{i}(:,iNPS),df_hilo.lo{i}(:,iNPS));
stats.SIIPS(i)=withinMetastats(df_hilo.hi{i}(:,iSIIPS),df_hilo.lo{i}(:,iSIIPS));
stats.rating(i)=withinMetastats(df_hilo.hi{i}(:,iR),df_hilo.lo{i}(:,iR));
stats.stimInt(i)=withinMetastats(df_hilo.hi{i}(:,iS),df_hilo.lo{i}(:,iS));

%'Ellingsen Heat vs Brushstroke'
% i=find(strcmp(studies,'ellingsen_brush'));
% df_hilo.hi{i}=mean(...
%         cat(3,...
%         df{(strcmp(df.studyID,'ellingsen')&strcmp(df.cond,'Painful_touch_placebo')),varselect},...
%          df{(strcmp(df.studyID,'ellingsen')&strcmp(df.cond,'Painful_touch_control')),varselect}),...
%         3);
% df_hilo.lo{i}=mean(...
%         cat(3,...
%         df{(strcmp(df.studyID,'ellingsen')&strcmp(df.cond,'Brushstroke_placebo')),varselect},...
%          df{(strcmp(df.studyID,'ellingsen')&strcmp(df.cond,'Brushstroke_control')),varselect}),...
%         3);
% stats.NPS(i)=withinMetastats(df_hilo.hi{i}(:,iNPS),df_hilo.lo{i}(:,iNPS));
% stats.rating(i)=withinMetastats(df_hilo.hi{i}(:,iR),df_hilo.lo{i}(:,iR));

%'Freeman High vs Lowpain'
i=find(strcmp(studies,'freeman'));
df_hilo.hi{i}= df{(strcmp(df.studyID,'freeman')&strcmp(df.cond,'post-HighpainVsLowpain')),varselect};
stats.NPS(i)=withinMetastats(df_hilo.hi{i}(:,iNPS).*-1,0); % Jian Kong: Mail 20.06.2017: "see attachment for the low pain vs high pain data, please be noted to we used low pain minus high pain."
stats.SIIPS(i)=withinMetastats(df_hilo.hi{i}(:,iSIIPS).*-1,0);
stats.rating(i)=withinMetastats(df_hilo.hi{i}(:,iR),0);
stats.stimInt(i)=withinMetastats(df_hilo.hi{i}(:,iS),0);

% 'Kessner Hi (VAS 80) vs Lo (VAS 50) stimulation'
% Since Kessner et al simulated a treatment effect witnin participants,
% Hi pain stimulation coincides with control treatment and
% Lo pain stimulation coincides with placebo treatment
i=find(strcmp(studies,'kessner'));
df_hilo.hi{i}=[df{(strcmp(df.studyID,'kessner')&strcmp(df.cond,'pain_control_neg')),varselect};...
        df{(strcmp(df.studyID,'kessner')&strcmp(df.cond,'pain_control_pos')),varselect}];
df_hilo.lo{i}=[df{(strcmp(df.studyID,'kessner')&strcmp(df.cond,'pain_placebo_neg')),varselect};...
         df{(strcmp(df.studyID,'kessner')&strcmp(df.cond,'pain_placebo_pos')),varselect}];
stats.NPS(i)=withinMetastats(df_hilo.hi{i}(:,iNPS),df_hilo.lo{i}(:,iNPS));
stats.SIIPS(i)=withinMetastats(df_hilo.hi{i}(:,iSIIPS),df_hilo.lo{i}(:,iSIIPS));
stats.rating(i)=withinMetastats(df_hilo.hi{i}(:,iR),df_hilo.lo{i}(:,iR));
stats.stimInt(i)=withinMetastats(df_hilo.hi{i}(:,iS),df_hilo.lo{i}(:,iS));

%'Kong06 Heat vs Warm'
i=find(strcmp(studies,'kong06'));
df_hilo.hi{i}=mean(...
        cat(3,...
        df{(strcmp(df.studyID,'kong06')&strcmp(df.cond,'pain_pre_control_high_pain')),varselect},...
         df{(strcmp(df.studyID,'kong06')&strcmp(df.cond,'pain_pre_placebo_high_pain')),varselect},...
         df{(strcmp(df.studyID,'kong06')&strcmp(df.cond,'pain_post_control_high_pain')),varselect},...
         df{(strcmp(df.studyID,'kong06')&strcmp(df.cond,'pain_post_placebo_high_pain')),varselect}),...
        3);
df_hilo.lo{i}=mean(...
        cat(3,...
        df{(strcmp(df.studyID,'kong06')&strcmp(df.cond,'pain_pre_control_low_pain')),varselect},...
         df{(strcmp(df.studyID,'kong06')&strcmp(df.cond,'pain_pre_placebo_low_pain')),varselect},...
         df{(strcmp(df.studyID,'kong06')&strcmp(df.cond,'pain_post_control_low_pain')),varselect},...
         df{(strcmp(df.studyID,'kong06')&strcmp(df.cond,'pain_post_placebo_low_pain')),varselect}),...
        3);
stats.NPS(i)=withinMetastats(df_hilo.hi{i}(:,iNPS),df_hilo.lo{i}(:,iNPS));
stats.SIIPS(i)=withinMetastats(df_hilo.hi{i}(:,iSIIPS),df_hilo.lo{i}(:,iSIIPS));
stats.rating(i)=withinMetastats(df_hilo.hi{i}(:,iR),df_hilo.lo{i}(:,iR));
stats.stimInt(i)=withinMetastats(df_hilo.hi{i}(:,iS),df_hilo.lo{i}(:,iS));

%'Kong09 High vs Lowpain'
i=find(strcmp(studies,'kong09'));
df_hilo.hi{i}= df{(strcmp(df.studyID,'kong09')&strcmp(df.cond,'allHighpainVSLowPain')),varselect};
stats.NPS(i)=withinMetastats(df_hilo.hi{i}(:,iNPS),0);
stats.SIIPS(i)=withinMetastats(df_hilo.hi{i}(:,iSIIPS),0);
stats.rating(i)=withinMetastats(df_hilo.hi{i}(:,iR),0);
stats.stimInt(i)=withinMetastats(df_hilo.hi{i}(:,iS),0);

%'R?tgen Hi vs Low shock'
i=find(strcmp(studies,'ruetgen'));
df_hilo.hi{i}=[df{(strcmp(df.studyID,'ruetgen')&strcmp(df.cond,'Self_Pain_Control_Group')),varselect};...
         df{(strcmp(df.studyID,'ruetgen')&strcmp(df.cond,'Self_Pain_Placebo_Group')),varselect}];
df_hilo.lo{i}=[df{(strcmp(df.studyID,'ruetgen')&strcmp(df.cond,'Self_NoPain_Control_Group')),varselect};...
         df{(strcmp(df.studyID,'ruetgen')&strcmp(df.cond,'Self_NoPain_Placebo_Group')),varselect}];

stats.NPS(i)=withinMetastats(df_hilo.hi{i}(:,iNPS),df_hilo.lo{i}(:,iNPS));
stats.SIIPS(i)=withinMetastats(df_hilo.hi{i}(:,iSIIPS),df_hilo.lo{i}(:,iSIIPS));
stats.rating(i)=withinMetastats(df_hilo.hi{i}(:,iR),df_hilo.lo{i}(:,iR));
stats.stimInt(i)=withinMetastats(df_hilo.hi{i}(:,iS),df_hilo.lo{i}(:,iS));

%'wager_princeton High vs Lowpain'
i=find(strcmp(studies,'wager04a_princeton'));
df_hilo.hi{i}= df{(strcmp(df.studyID,'wager04a_princeton')&strcmp(df.cond,'intense-mild')),varselect};
stats.NPS(i)=withinMetastats(df_hilo.hi{i}(:,iNPS),0);
stats.SIIPS(i)=withinMetastats(df_hilo.hi{i}(:,iSIIPS),0);
stats.rating(i)=withinMetastats(df_hilo.hi{i}(:,iR),0);
stats.stimInt(i)=withinMetastats(df_hilo.hi{i}(:,iS),0);


save('Hi_vs_lo_pain_all_study_level_results.mat','stats');


%% NPS: Summarize all studies + Forest Plot
% Summary analysis+ Forest Plot
statsNPS=[stats.NPS];
statsStimInt=[stats.stimInt];

ForestPlotter(statsNPS,...
              'studyIDtexts',studyIDtexts,...
              'outcomelabel','NPS-Response (Hedge''s g)',...
              'type','random',...
              'summarystat','g',...
              'textoffset',0,...
              'withoutlier',0,...
              'WIsubdata',0,...
              'boxscaling',1);
          
hgexport(gcf, '../../Protocol_and_Manuscript/NPS_placebo/NEJM/Figures/Fig_S3_NPS_hi_vs_lo.svg', hgexport('factorystyle'), 'Format', 'svg');
hgexport(gcf, '../../Protocol_and_Manuscript/NPS_placebo/NEJM/Figures/Fig_S3_NPS_hi_vs_lo.png', hgexport('factorystyle'), 'Format', 'png');
crop('../../Protocol_and_Manuscript/NPS_placebo/NEJM/Figures/Fig_S3_NPS_hi_vs_lo.png');

hgexport(gcf, '../../Protocol_and_Manuscript/NPS_validation/Figures/Figure4', hgexport('factorystyle'), 'Format', 'svg');

NPS_pos_imgs=vertcat(statsNPS.delta)>0;
perc_pos_NPS=sum(NPS_pos_imgs)/sum(~isnan(NPS_pos_imgs));

disp([num2str(perc_pos_NPS*100),'% of participants showed a positive NPS response.'])


%% SIIPS: Summarize all studies + Forest Plot
% Summary analysis+ Forest Plot
statsSIIPS=[stats.SIIPS];
statsStimInt=[stats.stimInt];

ForestPlotter(statsSIIPS,...
              'studyIDtexts',studyIDtexts,...
              'outcomelabel','SIIPS-Response (Hedge''s g)',...
              'type','random',...
              'summarystat','g',...
              'textoffset',0,...
              'withoutlier',0,...
              'WIsubdata',0,...
              'boxscaling',1);
          
hgexport(gcf, '../../Protocol_and_Manuscript/NPS_placebo/NEJM/Figures/Fig_S3_SIIPS_hi_vs_lo.svg', hgexport('factorystyle'), 'Format', 'svg');
hgexport(gcf, '../../Protocol_and_Manuscript/NPS_placebo/NEJM/Figures/Fig_S3_SIIPS_hi_vs_lo.png', hgexport('factorystyle'), 'Format', 'png');
crop('../../Protocol_and_Manuscript/NPS_placebo/NEJM/Figures/Fig_S3_SIIPS_hi_vs_lo.png');

hgexport(gcf, '../../Protocol_and_Manuscript/NPS_validation/Figures/Figure4', hgexport('factorystyle'), 'Format', 'svg');

SIIPS_pos_imgs=vertcat(statsSIIPS.delta)>0;
perc_pos_SIIPS=sum(SIIPS_pos_imgs)/sum(~isnan(SIIPS_pos_imgs));

disp([num2str(perc_pos_SIIPS*100),'% of participants showed a positive SIIPS response.'])